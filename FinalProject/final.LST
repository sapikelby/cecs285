A51 MACRO ASSEMBLER  FINAL                                                                04/18/2014 13:06:00 PAGE     1


MACRO ASSEMBLER A51 V8.02
OBJECT MODULE PLACED IN final.OBJ
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\A51.EXE final.A51 SET(SMALL) DEBUG EP

LOC  OBJ            LINE     SOURCE

                       1     
                       2     
                       3     
                       4     
                       5     
                       6     
                       7     
                       8     
                       9     
0000                  10             ORG 0
                      11     
0000 758920           12             MOV TMOD, #20H
0003 758DFD           13             MOV TH1, #0FDH
0006 759850           14             MOV SCON, #50H
                      15             ;CLR A
0009                  16     DISPLAY_MENU:    
                      17         ;LCALL RECEIVE1BYTE
                      18             ;MOV B, A
0009 9000BC           19             MOV DPTR, #MSG_HEAD
000C 120064           20             LCALL SEND1LINE
000F 120044           21             LCALL RECEIVE1BYTE
0012 120017           22             LCALL CHECK_DISPLAY_ALL
                      23             ;MOV B, A
                      24             
                      25             ;MOV A, B
                      26             ;LCALL SEND1BYTE
                      27             ;MOV DPTR, #MSG_END
                      28             ;LCALL SEND1LINE
0015 80F2             29         SJMP DISPLAY_MENU
                      30     
0017                  31     CHECK_DISPLAY_ALL:                                                                         
                                                                                                                    
0017 309008           32                     JNB P1.0, CHECK_AVG  ; JUMP if P0.1 is low, otherwise CHECK_AVG
001A 90007A           33                     MOV DPTR, #DATA_STRING
001D 120064           34                     LCALL SEND1LINE
0020 80E7             35                     SJMP DISPLAY_MENU                
                      36     
0022                  37     CHECK_AVG:
0022 3091E4           38                     JNB P1.1, DISPLAY_MENU ; JUMP if P0.2 is low, otherwise 
0025 12002A           39                     LCALL AVG
0028 80DF             40                     SJMP DISPLAY_MENU
                      41     
                      42     ;DISPLAY_ORIGINAL: 
                      43     ;               MOV DPTR, #DATA_STRING
                      44     ;               LCALL SEND1LINE
                      45     
002A                  46     AVG:
002A E4               47                     CLR A
002B 7940             48                     MOV R1, #40H ; destination address
002D 7848             49                     MOV R0, #48H   
002F 7A08             50                     MOV R2, #8
0031 75F008           51                     MOV B, #8
0034 9000B4           52                     MOV DPTR, #DATA_VALUES
0037                  53     AGAIN2: 
0037 E4               54                     CLR A
0038 93               55                     MOVC A, @A+DPTR
0039 F7               56                     MOV @R1, A
003A 26               57                     ADD A, @R0
A51 MACRO ASSEMBLER  FINAL                                                                04/18/2014 13:06:00 PAGE     2

003B F6               58                     MOV @R0, A
                      59                     
                      60                     ;MOV @RO, A
003C 09               61                     INC R1
003D A3               62                     INC DPTR
                      63                     
                      64                     
                      65                     
                      66     
003E DAF7             67                     DJNZ R2, AGAIN2
                      68                     
0040 E6               69                     MOV A, @R0
0041 84               70                     DIV AB
0042 F6               71                     MOV @R0, A 
0043 22               72                     RET
                      73     
0044                  74     RECEIVE1BYTE:
0044 C298             75             CLR RI
0046 D28E             76             SETB TR1
0048                  77     STAY1:  
0048 A298             78             MOV C,RI
004A 50FC             79             JNC STAY1
004C E599             80             MOV A, SBUF              ; move what we just received to register A
004E F590             81         MOV P1, A    
0050 C298             82             CLR RI
0052 C28E             83             CLR TR1
0054 22               84             RET
                      85             
0055                  86     SEND1BYTE:
0055 C299             87             CLR TI
0057 D28E             88             SETB TR1
0059 F599             89             MOV SBUF, A
005B                  90     STAY2:  
005B A299             91             MOV C,TI
005D 50FC             92             JNC STAY2
005F C299             93         CLR TI
0061 C28E             94             CLR TR1
0063 22               95         RET
                      96             
0064                  97     SEND1LINE:
0064 C299             98             CLR TI
0066 D28E             99             SETB TR1
0068 E4              100     AGAIN:  CLR A
0069 93              101             MOVC A, @A+DPTR
006A 600D            102             JZ DONE
006C A3              103             INC DPTR
006D F599            104             MOV SBUF, A
006F                 105     STAY3:  
006F A299            106             MOV C,TI
0071 50FC            107             JNC STAY3
0073 C299            108         CLR TI
0075 80F1            109             SJMP AGAIN
0077 C28E            110             CLR TR1
0079 22              111     DONE:RET
                     112     
                     113     
                     114     ;ADD:
                     115     ;               CLR A
                     116     ;               MOV R0, #40H ; destination address
                     117     ;               MOV R2, #8
                     118     ;AGAIN: MOV @R0, P0
                     119     ;               ADD A, @R0
                     120     ;               
                     121     ;               JNC SKIP
                     122     ;               INC 4BH ; increment 4BH for each carry (HIGH BYTE)
                     123     ;               
A51 MACRO ASSEMBLER  FINAL                                                                04/18/2014 13:06:00 PAGE     3

                     124     ;SKIP:  INC R0  ; increment the location to which you are adding the string at position(i)
                     125     ;               DJNZ R2, AGAIN
                     126     ;               MOV 4AH, A ; MOVE LOW BYTE INTO 4AH
                     127     ;               END
                     128     
007A 48657265        129     DATA_STRING: DB "Here is the original data:", 0AH, "17, 37, 9, 18, 11, 26, 23, 43", 0AH, 0 
007E 20697320                
0082 74686520                
0086 6F726967                
008A 696E616C                
008E 20646174                
0092 613A0A31                
0096 372C2033                
009A 372C2039                
009E 2C203138                
00A2 2C203131                
00A6 2C203236                
00AA 2C203233                
00AE 2C203433                
00B2 0A00                    
00B4 11250912        130     DATA_VALUES: DB 17, 37, 9, 18, 11, 26, 23, 43 
00B8 0B1A172B                
                     131     ;MSG_HEAD: DB "I received ",0
                     132     ;MSG_END: DB '!', 0AH, 0DH, 0 ;ODH for carriage return, 0AH for newline
                     133     ;MSG_HEAD: DB "I received ",0
00BC 506C6561        134     MSG_HEAD: DB "Please select from the following:", 0AH, "1. Display original data", 0AH, "2.
                              Find and display average", 0AH, "3. Find and display maximum", 0AH, "4. Find and display minimum", 0AH, 0 
00C0 73652073                
00C4 656C6563                
00C8 74206672                
00CC 6F6D2074                
00D0 68652066                
00D4 6F6C6C6F                
00D8 77696E67                
00DC 3A0A312E                
00E0 20446973                
00E4 706C6179                
00E8 206F7269                
00EC 67696E61                
00F0 6C206461                
00F4 74610A32                
00F8 2E204669                
00FC 6E642061                
0100 6E642064                
0104 6973706C                
0108 61792061                
010C 76657261                
0110 67650A33                
0114 2E204669                
0118 6E642061                
011C 6E642064                
0120 6973706C                
0124 6179206D                
0128 6178696D                
012C 756D0A34                
0130 2E204669                
0134 6E642061                
0138 6E642064                
013C 6973706C                
0140 6179206D                
0144 696E696D                
0148 756D0A00                
                     135     ;1.     Display original data - a prompt should follow it saying "original data: …" 
                     136     ;2.     Find and display average
                     137     ;3.     Find and display maximum
                     138     ;4.     Find and display minimum
A51 MACRO ASSEMBLER  FINAL                                                                04/18/2014 13:06:00 PAGE     4

                     139     
                     140     ;MSG_END: DB '', 0AH, 0DH, 0 ;ODH for carriage return, 0AH for newline
                     141     
                     142             END
                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
                             
                                     
                             
                             
A51 MACRO ASSEMBLER  FINAL                                                                04/18/2014 13:06:00 PAGE     5

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AGAIN. . . . . . .  C ADDR   0068H   A   
AGAIN2 . . . . . .  C ADDR   0037H   A   
AVG. . . . . . . .  C ADDR   002AH   A   
B. . . . . . . . .  D ADDR   00F0H   A   
CHECK_AVG. . . . .  C ADDR   0022H   A   
CHECK_DISPLAY_ALL.  C ADDR   0017H   A   
DATA_STRING. . . .  C ADDR   007AH   A   
DATA_VALUES. . . .  C ADDR   00B4H   A   
DISPLAY_MENU . . .  C ADDR   0009H   A   
DONE . . . . . . .  C ADDR   0079H   A   
MSG_HEAD . . . . .  C ADDR   00BCH   A   
P1 . . . . . . . .  D ADDR   0090H   A   
RECEIVE1BYTE . . .  C ADDR   0044H   A   
RI . . . . . . . .  B ADDR   0098H.0 A   
SBUF . . . . . . .  D ADDR   0099H   A   
SCON . . . . . . .  D ADDR   0098H   A   
SEND1BYTE. . . . .  C ADDR   0055H   A   
SEND1LINE. . . . .  C ADDR   0064H   A   
STAY1. . . . . . .  C ADDR   0048H   A   
STAY2. . . . . . .  C ADDR   005BH   A   
STAY3. . . . . . .  C ADDR   006FH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TI . . . . . . . .  B ADDR   0098H.1 A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR1. . . . . . . .  B ADDR   0088H.6 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
