A51 MACRO ASSEMBLER  PROJECT1                                                             03/14/2014 11:19:22 PAGE     1


MACRO ASSEMBLER A51 V8.02
OBJECT MODULE PLACED IN project1.OBJ
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\A51.EXE project1.a51 SET(SMALL) DEBUG EP

LOC  OBJ            LINE     SOURCE

                       1     ; ----- Kelby Sapien
                       2     ; ----- Project 1
                       3     
0000                   4                     ORG 0000H
0000 7590FF            5                     MOV P1, #0FFH
0003 308005            6     AGAIN:  JNB P0.0, CHECK_COUNT   ; JUMP if P0.0 is low, otherwise do bouncing cat
0006 1200C7            7                     LCALL BOUNCING                    ; lower pins have higher priority
0009 80F8              8                     SJMP AGAIN
                       9                     
000B                  10     CHECK_COUNT:                                                                               
                                                                                                              
000B 308105           11                     JNB P0.1, CHECK_DB  ; JUMP if P0.1 is low, otherwise do counting
000E 120064           12                     LCALL COUNT
0011 80F0             13                     SJMP AGAIN                ; AT EACH BRANCH, YOU WANT TO GO BACK TO AGAIN AN
                             D CHECK FOR PIN PRIORITY
                      14     
0013                  15     CHECK_DB:
0013 308205           16                     JNB P0.2, CHECK_CYC ; JUMP if P0.2 is low, otherwise do double_bounce
0016 12007C           17                     LCALL DOUBLE_BOUNCE
0019 80E8             18                     SJMP AGAIN
                      19     
001B                  20     CHECK_CYC: 
001B 308305           21                     JNB P0.3, ERR   ; JUMP if P0.3 is low to error state, otherwise do cyclic m
                             ode
001E 120032           22                     LCALL CYCLIC
0021 80E0             23                     SJMP AGAIN
                      24     
0023                  25     ERR:    ; IF ALL PINS ARE OFF, THEN JUST FLASH THEM                                        
                                                                                                                                       
0023 7590FF           26                     MOV P1,#0FFH
0026 1200E6           27                     LCALL DELAY
0029 759000           28                     MOV P1, #0
002C 1200E6           29                     LCALL DELAY
002F 020003           30                     LJMP AGAIN
                      31     
                      32     ; ---- CYCLIC MODE
0032                  33     CYCLIC: 
0032 20802C           34                     JB P0.0, JUMP2_BOUNCE ; RETURN TO PREVIOUS MODE IF PRESSED
0035 20812C           35                     JB P0.1, COUNT
0038 208241           36                     JB P0.2, DOUBLE_BOUNCE
003B 308322           37                     JNB P0.3, CYCLIC_DONE   
                      38                     ;MOV A, #0H
003E 759000           39                     MOV P1, #0
0041 1200E6           40                     LCALL DELAY
0044 7480             41                     MOV A, #80H
0046 7D08             42                     MOV R5, #8
0048                  43     AGAIN2:         
0048 20807C           44                     JB P0.0, BOUNCING ; RETURN TO PREVIOUS MODE IF PRESSED
004B 208116           45                     JB P0.1, COUNT
004E 20822B           46                     JB P0.2, DOUBLE_BOUNCE
0051 30830C           47                     JNB P0.3, CYCLIC_DONE
0054 F590             48                     MOV P1, A
0056 1200E6           49                     LCALL DELAY
0059 FE               50                     MOV R6, A
005A 03               51                     RR A
005B 4E               52                     ORL A, R6
                      53                     ;MOV P1, A
                      54                     ;LCALL DELAY
A51 MACRO ASSEMBLER  PROJECT1                                                             03/14/2014 11:19:22 PAGE     2

005C DDEA             55                     DJNZ R5, AGAIN2
005E 80D2             56                     SJMP CYCLIC
                      57     
0060 22               58     CYCLIC_DONE: RET
                      59     
0061                  60     JUMP2_BOUNCE:
0061 0200C7           61                     LJMP BOUNCING
                      62     
                      63     ;---- COUNTING MODE
0064                  64     COUNT:  
0064 208060           65                     JB P0.0, BOUNCING
0067 759000           66             MOV P1, #0
006A 7BFF             67                     MOV R3, #0FFH
006C                  68     DO_AGAIN:
006C 208058           69                     JB P0.0, BOUNCING
006F 308109           70                     JNB P0.1, C_DONE
                      71                     ;JNB P0.3, ERR
0072 1200E6           72             LCALL DELAY             
0075 0590             73                     INC P1
0077 DBF3             74                     DJNZ R3, DO_AGAIN
0079 8088             75                     SJMP AGAIN
007B 22               76     C_DONE: RET
                      77     
                      78     
                      79     ; --- DOUBLE BOUNCE
                      80     ; BE CAREFUL, R1-R3 ARE USED BY DELAY FUNCTION
                      81     ; KEPT GETTING ERRORS B/C OF IT
                      82     ; fix overlap by calling two different loops
007C                  83     DOUBLE_BOUNCE:
007C 208048           84                     JB P0.0, BOUNCING
007F 2081E2           85                     JB P0.1, COUNT ; JUMP BACK TO COUNTING MODE IF P0.1 IS HIGH
0082 308241           86                     JNB P0.2, D_BOUNCE_DONE
0085 7C80             87                     MOV R4, #80H ; 1000 0000
0087 7D01             88                     MOV R5, #01H ; 0000 0001
0089 7E03             89                     MOV R6, #3 ; COUNTER
                      90             
008B EC               91                     MOV A, R4 ; store initial R1 VAL into A = 1000 0000
                      92                     
008C 4D               93                     ORL A, R5 ; A = 1000 0001
008D F590             94                     MOV P1, A ; DISPLAYS IN LED
008F 1200E6           95                     LCALL DELAY
                      96                     
0092                  97     PART1:
0092 208032           98                     JB P0.0, BOUNCING
0095 2081CC           99                     JB P0.1, COUNT
0098 30822B          100                     JNB P0.2, D_BOUNCE_DONE 
                     101                     ;CLR A
009B EC              102                     MOV A, R4 ; A = 1000 0000
009C 03              103                     RR A   ;        A = 0100 0000
009D FC              104                     MOV R4, A ;R1 = 0100 0000
009E ED              105                     MOV A, R5 ; A = 0000 0001
009F 23              106                     RL A      ; A = 0000 0010
00A0 FD              107                     MOV R5, A ;R2 = 0000 0010
00A1 4C              108                     ORL A, R4 ; R1 OR R2 A = 0100 0010 FIRST RUN
                     109                     ;CJNE A,   ; jump when 10 or 0001 1000
00A2 F590            110                     MOV P1, A ; DISPLAY
00A4 1200E6          111                     LCALL DELAY
00A7 DEE9            112                     DJNZ R6, PART1
00A9 7E02            113                     MOV R6, #2 ; RESET COUNTER
00AB 8000            114                     SJMP PART2
                     115     
                     116                     
00AD                 117     PART2:
00AD 208017          118                     JB P0.0, BOUNCING
00B0 2081B1          119                     JB P0.1, COUNT
00B3 308210          120                     JNB P0.2, D_BOUNCE_DONE 
A51 MACRO ASSEMBLER  PROJECT1                                                             03/14/2014 11:19:22 PAGE     3

                     121                     ;CLR A
00B6 EC              122                     MOV A, R4 ; A = 1000 0000
00B7 23              123                     RL A   ;        A = 0100 0000
00B8 FC              124                     MOV R4, A ;R1 = 0100 0000
00B9 ED              125                     MOV A, R5 ; A = 0000 0001
00BA 03              126                     RR A      ; A = 0000 0010
00BB FD              127                     MOV R5, A ;R2 = 0000 0010
00BC 4C              128                     ORL A, R4 ; R1 OR R2 A = 0100 0010 FIRST RUN
                     129                     ;CJNE A,   ; jump when 10 or 0001 1000
00BD F590            130                     MOV P1, A ; DISPLAY
00BF 1200E6          131                     LCALL DELAY
00C2 DEE9            132                     DJNZ R6, PART2
00C4 80B6            133                     SJMP DOUBLE_BOUNCE              
                     134                     
                     135     
00C6 22              136     D_BOUNCE_DONE:  RET
                     137     
                     138     ; -- BOUNCING
00C7                 139     BOUNCING:
00C7 7401            140                     MOV A, #01H
00C9 7808            141                     MOV R0, #8
00CB 308017          142     LEFT:   JNB P0.0, B_DONE           ; RETURN IF DONE
00CE 03              143                     RR A
00CF F590            144                     MOV P1, A
00D1 1200E6          145                     LCALL DELAY
00D4 D8F5            146                     DJNZ R0, LEFT ; USE A LOOP TO MOVE 7 POSITIONS
00D6 7806            147                     MOV R0, #6    ; RESET COUNTER
00D8 30800A          148     RIGHT:  JNB P0.0, B_DONE           ; RETURN IF DONE
00DB 23              149                     RL A
00DC F590            150                     MOV P1, A
                     151                     
00DE 1200E6          152                     LCALL DELAY
00E1 D8F5            153                     DJNZ R0, RIGHT
00E3 80E2            154                     SJMP BOUNCING ; REPEAT THE WHOLE SEQUENCE AGAIN
00E5 22              155     B_DONE: RET
                     156     
                     157     
                     158     ; -----------DELAY FUNCTION
00E6                 159     DELAY:
00E6 7BDC            160                     MOV R3, #220
                     161     
00E8                 162     HALF_SEC_CHK:                            ; LOWER PINS HAVE HIGHER PRIORITY
00E8 308404          163                     JNB P0.4, ONE_SEC_CHK   
00EB 7F01            164                     MOV R7, #1                        
00ED 8019            165                     SJMP DLY
                     166     
00EF                 167     ONE_SEC_CHK:    
00EF 308504          168                     JNB P0.5, ONE_HALF_CHK  
00F2 7F02            169                     MOV R7, #2                        
00F4 8012            170                     SJMP DLY
                     171     
00F6                 172     ONE_HALF_CHK:   
00F6 308604          173                     JNB P0.6, TWO_SEC_CHK   
00F9 7F03            174                     MOV R7, #3                        
00FB 800B            175                     SJMP DLY
00FD                 176     TWO_SEC_CHK:    
00FD 308704          177                     JNB P0.7, ERR_DELAY     
0100 7F04            178                     MOV R7, #4                        
0102 8004            179                     SJMP DLY
                     180     
0104                 181     ERR_DELAY:
0104 7F01            182                     MOV R7, #1
                     183                     ;LCALL DLY
0106 8000            184                     SJMP DLY
                     185                      
                     186     
A51 MACRO ASSEMBLER  PROJECT1                                                             03/14/2014 11:19:22 PAGE     4

0108                 187     DLY:
                     188                     
0108 79FF            189     DLY0:   MOV  R1, #0FFH
010A 7AFF            190     DLY1:   MOV  R2, #0FFH
010C DAFE            191     DLY2:   DJNZ R2, DLY2
010E D9FA            192             DJNZ R1, DLY1
0110 DBF6            193             DJNZ R3, DLY0
0112 DFF4            194                     DJNZ R7, DLY ; DO THE WHOLE LOOP AGAIN  
0114 22              195                     RET
                     196                     END      
                             ; -- DELAY FUNCTION ENDS
A51 MACRO ASSEMBLER  PROJECT1                                                             03/14/2014 11:19:22 PAGE     5

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AGAIN. . . . . . .  C ADDR   0003H   A   
AGAIN2 . . . . . .  C ADDR   0048H   A   
BOUNCING . . . . .  C ADDR   00C7H   A   
B_DONE . . . . . .  C ADDR   00E5H   A   
CHECK_COUNT. . . .  C ADDR   000BH   A   
CHECK_CYC. . . . .  C ADDR   001BH   A   
CHECK_DB . . . . .  C ADDR   0013H   A   
COUNT. . . . . . .  C ADDR   0064H   A   
CYCLIC . . . . . .  C ADDR   0032H   A   
CYCLIC_DONE. . . .  C ADDR   0060H   A   
C_DONE . . . . . .  C ADDR   007BH   A   
DELAY. . . . . . .  C ADDR   00E6H   A   
DLY. . . . . . . .  C ADDR   0108H   A   
DLY0 . . . . . . .  C ADDR   0108H   A   
DLY1 . . . . . . .  C ADDR   010AH   A   
DLY2 . . . . . . .  C ADDR   010CH   A   
DOUBLE_BOUNCE. . .  C ADDR   007CH   A   
DO_AGAIN . . . . .  C ADDR   006CH   A   
D_BOUNCE_DONE. . .  C ADDR   00C6H   A   
ERR. . . . . . . .  C ADDR   0023H   A   
ERR_DELAY. . . . .  C ADDR   0104H   A   
HALF_SEC_CHK . . .  C ADDR   00E8H   A   
JUMP2_BOUNCE . . .  C ADDR   0061H   A   
LEFT . . . . . . .  C ADDR   00CBH   A   
ONE_HALF_CHK . . .  C ADDR   00F6H   A   
ONE_SEC_CHK. . . .  C ADDR   00EFH   A   
P0 . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
PART1. . . . . . .  C ADDR   0092H   A   
PART2. . . . . . .  C ADDR   00ADH   A   
RIGHT. . . . . . .  C ADDR   00D8H   A   
TWO_SEC_CHK. . . .  C ADDR   00FDH   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
